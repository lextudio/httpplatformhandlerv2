#pragma classflags("forceupdate")
#pragma namespace ("\\\\.\\Root\\WMI")
#pragma autorecover

/*
 * HttpPlatformHandler module trace events layout
 * Uncomment the following class to run mof2trace to generate header file
 * comment it back before checking it in
[Dynamic,
  Description("IIS: WWW Server"),
  Guid("{3a2a4e84-4c21-4981-ae10-3fda0d9b0f83}"),
  locale("MS\\0x409")]
class IIS_Trace:EventTrace
{
    [Description ("Enable Flags") : amended,
        ValueDescriptions{
            "HttpPlaformHandler module events" } : amended,
        DefineValues{
            "ETW_IIS_HTTP_PLATFORM" },
        Values{
            "HTTP_PLATFORM" },
        ValueMap{
            "0x10000" }
    ]
    uint32 Flags;

    [Description ("Levels") : amended,
        ValueDescriptions{
            "Abnormal exit or termination",
            "Severe errors",
            "Warnings",
            "Information",
            "Detailed information" } : amended,
         DefineValues{
            "TRACE_LEVEL_FATAL",
            "TRACE_LEVEL_ERROR",
            "TRACE_LEVEL_WARNING",
            "TRACE_LEVEL_INFORMATION",
            "TRACE_LEVEL_VERBOSE" },
        Values{
            "Fatal",
            "Error",
            "Warning",
            "Information",
            "Verbose" },
        ValueMap{
            "0x1",
            "0x2",
            "0x3",
            "0x4",
            "0x5" },
        ValueType("index")
    ]
    uint32 Level;
};
*/

[Dynamic,
 Description("HTTP_PLATFORM runtime events") : amended,
 Guid("{831d632f-b8af-416e-ac29-5bee2ecfea09}"),
 EventVersion(1),
 DisplayName("HTTP_PLATFORM"),
 EventHttpPlatformRuntime,
 locale("MS\\0x409")
]
class Http_Platform_Events:IIS_Trace
{
};

[Dynamic,
 Description("Start application success") : amended,
 EventType(1),
 EventLevel(4),
 EventTypeName("HTTP_PLATFORM_START_APPLICATION_SUCCESS") : amended
]
class Http_Platform_AppStart:Http_Platform_Events
{
    [WmiDataId(1),
     Description("Context ID") : amended,
     extension("Guid"),
     ActivityID,
     read]
     object  ContextId;
    [WmiDataId(2),
     Description("Application Description") : amended,
     StringTermination("NullTerminated"),
     format("w"),
     read]
     string AppDescription;
};

[Dynamic,
 Description("Start application failed") : amended,
 EventType(2),
 EventLevel(2),
 EventTypeName("HTTP_PLATFORM_START_APPLICATION_FAIL") : amended
]
class Http_Platform_AppStartFail:Http_Platform_Events
{
    [WmiDataId(1),
     Description("Context ID") : amended,
     extension("Guid"),
     ActivityID,
     read]
     object  ContextId;
    [WmiDataId(2),
     Description("Application Start Failure Description") : amended,
     StringTermination("NullTerminated"),
     format("w"),
     read]
     string FailureDescription;
};

[Dynamic,
 Description("Start forwarding request") : amended,
 EventType(3),
 EventLevel(4),
 EventTypeName("HTTP_PLATFORM_REQUEST_FORWARD_START") : amended
]
class Http_Platform_ForwardStart:Http_Platform_Events
{
    [WmiDataId(1),
     Description("Context ID") : amended,
     extension("Guid"),
     ActivityID,
     read]
     object  ContextId;
};

[Dynamic,
 Description("Finish forwarding request") : amended,
 EventType(4),
 EventLevel(4),
 EventTypeName("HTTP_PLATFORM_REQUEST_FORWARD_END") : amended
]
class Http_Platform_ForwardEnd:Http_Platform_Events
{
    [WmiDataId(1),
     Description("Context ID") : amended,
     extension("Guid"),
     ActivityID,
     read]
     object  ContextId;
};

[Dynamic,
 Description("Forwarding request failure") : amended,
 EventType(5),
 EventLevel(2),
 EventTypeName("HTTP_PLATFORM_REQUEST_FORWARD_FAIL") : amended
]
class Http_Platform_ForwardFail:Http_Platform_Events
{
    [WmiDataId(1),
     Description("Context ID") : amended,
     extension("Guid"),
     ActivityID,
     read]
     object  ContextId;
    [WmiDataId(2),
     Description("Error code") : amended,
     format("x"),
     read]
     uint32  ErrorCode;
};

[Dynamic,
 Description("Receiving callback from WinHttp") : amended,
 EventType(6),
 EventLevel(4),
 EventTypeName("HTTP_PLATFORM_WINHTTP_CALLBACK") : amended
]
class Http_Platform_WinHttpCallBack:Http_Platform_Events
{
    [WmiDataId(1),
     Description("Context ID") : amended,
     extension("Guid"),
     ActivityID,
     read]
     object  ContextId;
    [WmiDataId(2),
     Description("InternetStatus") : amended,
     format("x"),
     read]
     uint32  InternetStatus;
};

[Dynamic,
 Description("Failed HRESULT") : amended,
 EventType(14),
 EventLevel(3),
 EventTypeName("HTTP_PLATFORM_HRESULT_FAILED") : amended
]
class Http_Platform_HRESULTFailed:Http_Platform_Events
{
    [WmiDataId(1),
     Description("Context ID") : amended,
     extension("Guid"),
     ActivityID,
     read]
     object  ContextId;
     [WmiDataId(2),
     Description("Failed source file location") : amended,
     StringTermination("NullTerminated"),
     read]
     string File;
     [WmiDataId(3),
     Description("Failed line number") : amended,
     format("d"),
     read]
     uint32 Line;
     [WmiDataId(4),
     Description("HResult") : amended,
     format("x"),
     read]
     uint32 HResult;
};

[Dynamic,
 Description("Caught exception") : amended,
 EventType(15),
 EventLevel(3),
 EventTypeName("HTTP_PLATFORM_EXCEPTION_CAUGHT") : amended
]
class Http_Platform_ExceptionCaughFailed:Http_Platform_Events
{
    [WmiDataId(1),
     Description("Context ID") : amended,
     extension("Guid"),
     ActivityID,
     read]
     object  ContextId;
     [WmiDataId(2),
     Description("Exception catch file location") : amended,
     StringTermination("NullTerminated"),
     read]
     string File;
     [WmiDataId(3),
     Description("Exception catch line number") : amended,
     format("d"),
     read]
     uint32 Line;
     [WmiDataId(2),
     Description("Exception description") : amended,
     StringTermination("NullTerminated"),
     read]
     string Description;
};

